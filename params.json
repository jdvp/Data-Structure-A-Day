{"name":"Data Structure A Day","tagline":"I plan to learn (and implement) a data structure every day.","body":"###Data Structure A Day\r\n\r\nHello friends. You might be wondering what is Data Structure A Day? \r\n\r\nSince I am trying to get a job, I think it might be helpful to learn all of my data structures and algorithms again. I say again, but I'm sure there are fundamental structures and algorithms that I've never used before, such as tries (which I like the idea of but have never actually used).\r\n\r\nThis \"challenge\" (if you will) will not only force me to learn data structures (which is important in its own right), but also to implement the data structures in some meaningful way. For instance, if I am learning a trie, I would possibly implement a text document searching program. Each day, I will create a project which will use the data structure (or possibly algorithm) of the day!\r\n\r\nOn this page, I will list all of the data structures that I plan to learn and link to them once I have created an appropriate project. I'm not sure if I will go in order or not, but probably not since learning each type of list followed by each type of tree and so on might be boring if I don't mix it up. \r\n\r\nSo here is a tentative list (which I may add onto or remove from):\r\n\r\nLinear Data Types\r\n* [Array](https://github.com/jdvp/Data-Structure-A-Day/tree/master/2015.08.20%20Array)\r\n* Bit Array\r\n* [Matrix](https://github.com/jdvp/Data-Structure-A-Day/tree/master/2015.08.20%20Array)\r\n* Parallel Array\r\n* Sparse Array\r\n* Linked List\r\n* Doubly Linked List\r\n* Self-Organizing List\r\n* Skip List\r\n\r\nTrees\r\n* AVL Tree\r\n* Binary Tree\r\n* Binary Search Tree\r\n* Splay Tree\r\n* Red-Black Tree\r\n* B-Tree\r\n* 2-3 Tree\r\n* Heap\r\n* Binary Heap\r\n* Fibonacci Heap\r\n* [Trie](https://github.com/jdvp/Data-Structure-A-Day/tree/master/2015.08.21%20Trie)\r\n* Suffix Tree\r\n* Judy Array\r\n* CTrie\r\n* Ternary Tree\r\n* Fusion Tree\r\n* Spaghetti Stack\r\n\r\nHashes\r\n* Hash List\r\n* Hash Table\r\n* Hash Trie\r\n* Hash Trie\r\n* Bloom Filter\r\n\r\nGraphs\r\n* Adjacency List\r\n* Adjacency Matrix\r\n* Scene Graph\r\n* Directed Graph\r\n* Directed ACyclic Graph\r\n* Multigraph\r\n* Hypergraph\r\n\r\n","google":"UA-65831716-4","note":"Don't delete this file! It's used internally to help with page regeneration."}